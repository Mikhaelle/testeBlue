{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mikha/Documentos/test-blue/client/pokechange/src/components/textselect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from './textfield';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '15ch'\n    }\n  }\n}));\nexport default function MultilineTextFields(playerData) {\n  _s();\n\n  const classes = useStyles();\n  const [currencies, setCurrencies] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [pokemonsInUse, setPokemonsInUse] = React.useState([]);\n\n  const addNewPokemonInUse = event => {\n    console.log(\"oi\");\n    /*let pokesInUse = pokemonsInUse\n    pokesInUse.push(newPokemon)\n    setPokemonsInUse(pokesInUse)*/\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    let currenciesData = [];\n    playerData.playerData.pokemons.forEach(pokemon => {\n      if (pokemon.number !== 0) {\n        for (let index = 0; index < pokemon.number; index++) {\n          const isUsed = pokemonsInUse.find(isUsed => isUsed.name === pokemon.name);\n\n          if (!isUsed) {\n            currenciesData.push(pokemon);\n          }\n        }\n      }\n    });\n    setCurrencies(currenciesData);\n    setIsLoading(false);\n  }, [playerData, pokemonsInUse]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: isLoading && currencies ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultilineTextFields, \"vW0tolPKryhAr0kS75S1ac+QuXM=\", false, function () {\n  return [useStyles];\n});\n\n_c = MultilineTextFields;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultilineTextFields\");","map":{"version":3,"sources":["/home/mikha/Documentos/test-blue/client/pokechange/src/components/textselect.js"],"names":["React","useEffect","makeStyles","TextField","useStyles","theme","root","margin","spacing","width","MultilineTextFields","playerData","classes","currencies","setCurrencies","useState","isLoading","setIsLoading","pokemonsInUse","setPokemonsInUse","addNewPokemonInUse","event","console","log","currenciesData","pokemons","forEach","pokemon","number","index","isUsed","find","name","push"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from './textfield';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '15ch',\n    },\n  },\n}));\n\nexport default function MultilineTextFields(playerData) {\n  const classes = useStyles();\n  const [currencies, setCurrencies] = React.useState([])\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [pokemonsInUse, setPokemonsInUse] = React.useState([]);\n\n  const addNewPokemonInUse = event => {\n    console.log(\"oi\")\n    /*let pokesInUse = pokemonsInUse\n    pokesInUse.push(newPokemon)\n    setPokemonsInUse(pokesInUse)*/\n  }\n  \n  useEffect(() => {\n    setIsLoading(true);\n\n    let currenciesData = []\n    playerData.playerData.pokemons.forEach((pokemon) => {\n      if (pokemon.number !== 0) {\n        for (let index = 0; index < pokemon.number; index++) {\n\n          const isUsed = pokemonsInUse.find(isUsed => isUsed.name === pokemon.name)\n          if (!isUsed) {\n            currenciesData.push(pokemon)\n          }\n        }\n      }\n    })\n    setCurrencies(currenciesData)\n    setIsLoading(false);\n  }, [playerData, pokemonsInUse]);\n\n\n\n  return (\n\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      {isLoading && currencies ? null :\n        <div>\n          <TextField pokemons={currencies} onUsePokemon={addNewPokemonInUse} />\n          <TextField pokemons={currencies} onUsePokemon={addNewPokemonInUse} />\n          <TextField pokemons={currencies} onUsePokemon={addNewPokemonInUse} />\n          <TextField pokemons={currencies} onUsePokemon={addNewPokemonInUse} />\n          <TextField pokemons={currencies} onUsePokemon={addNewPokemonInUse} />\n          <TextField pokemons={currencies} onUsePokemon={addNewPokemonInUse} />\n        </div>}\n\n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}