{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mikha/Documentos/test-blue/client/pokechange/src/components/MultilineTextFields.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextFieldComponent from './TextFieldComponent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '15ch'\n    }\n  }\n}));\n\nconst MultilineTextFields = playerData => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const classes = useStyles();\n  const [currencies, setCurrencies] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [pokemonsInUse, setPokemonsInUse] = React.useState([]);\n  useEffect(() => {\n    const loadPokemons = async () => {\n      setIsLoading(true);\n      let currenciesData = [];\n      await playerData.playerData.pokemons.forEach(pokemon => {\n        if (pokemon.number !== 0) {\n          for (let index = 0; index < pokemon.number; index++) {\n            const isUsed = pokemonsInUse.find(isUsed => isUsed.name === pokemon.name);\n            console.log(isUsed);\n\n            if (!isUsed) {\n              currenciesData.push(pokemon);\n            }\n          }\n        }\n      });\n      setCurrencies(currenciesData);\n      setIsLoading(false);\n    };\n\n    loadPokemons();\n  });\n\n  const addNewPokemonInUse = newPokemon => {\n    _s();\n\n    console.log(newPokemon);\n    let pokesInUse = pokemonsInUse;\n    pokesInUse.push(newPokemon);\n    setPokemonsInUse(pokesInUse);\n    console.log(pokesInUse);\n    useEffect();\n  };\n\n  _s(addNewPokemonInUse, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: isLoading ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(MultilineTextFields, \"HM1JLMzpgbYRS9r07mJoT9TBzbg=\", false, function () {\n  return [useStyles];\n});\n\n_c = MultilineTextFields;\nexport default MultilineTextFields;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultilineTextFields\");","map":{"version":3,"sources":["/home/mikha/Documentos/test-blue/client/pokechange/src/components/MultilineTextFields.js"],"names":["React","useEffect","makeStyles","TextFieldComponent","useStyles","theme","root","margin","spacing","width","MultilineTextFields","playerData","classes","currencies","setCurrencies","useState","isLoading","setIsLoading","pokemonsInUse","setPokemonsInUse","loadPokemons","currenciesData","pokemons","forEach","pokemon","number","index","isUsed","find","name","console","log","push","addNewPokemonInUse","newPokemon","pokesInUse"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAGA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,4BAAwB;AACtBC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADc;AAEtBC,MAAAA,KAAK,EAAE;AAFe;AADpB;AADiC,CAAZ,CAAD,CAA5B;;AASA,MAAMC,mBAAmB,GAAIC,UAAD,IAAgB;AAAA;;AAAA;;AAC1C,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8Bd,KAAK,CAACe,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,KAAK,CAACe,QAAN,CAAe,IAAf,CAAlC;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCnB,KAAK,CAACe,QAAN,CAAe,EAAf,CAA1C;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,YAAY,GAAG,YAAY;AAE/BH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,UAAII,cAAc,GAAG,EAArB;AACA,YAAMV,UAAU,CAACA,UAAX,CAAsBW,QAAtB,CAA+BC,OAA/B,CAAwCC,OAAD,IAAa;AACxD,YAAIA,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B;AACxB,eAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,OAAO,CAACC,MAApC,EAA4CC,KAAK,EAAjD,EAAqD;AAEnD,kBAAMC,MAAM,GAAGT,aAAa,CAACU,IAAd,CAAmBD,MAAM,IAAIA,MAAM,CAACE,IAAP,KAAgBL,OAAO,CAACK,IAArD,CAAf;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;;AACA,gBAAI,CAACA,MAAL,EAAa;AACXN,cAAAA,cAAc,CAACW,IAAf,CAAoBR,OAApB;AACD;AACF;AACF;AACF,OAXK,CAAN;AAYAV,MAAAA,aAAa,CAACO,cAAD,CAAb;AACAJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAnBD;;AAoBAG,IAAAA,YAAY;AAEb,GAvBQ,CAAT;;AA0BA,QAAMa,kBAAkB,GAAIC,UAAD,IAAgB;AAAA;;AACzCJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,UAAZ;AACA,QAAIC,UAAU,GAAGjB,aAAjB;AACAiB,IAAAA,UAAU,CAACH,IAAX,CAAgBE,UAAhB;AACAf,IAAAA,gBAAgB,CAACgB,UAAD,CAAhB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ;AACAlC,IAAAA,SAAS;AACV,GAPD;;AAlC0C,KAkCpCgC,kBAlCoC;;AA2C1C,sBAEE;AAAM,IAAA,SAAS,EAAErB,OAAO,CAACN,IAAzB;AAA+B,IAAA,UAAU,MAAzC;AAA0C,IAAA,YAAY,EAAC,KAAvD;AAAA,cAEGU,SAAS,GAAG,IAAH,gBACR;AAAA,8BACE,QAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAEH,UAA9B;AAA0C,QAAA,YAAY,EAAEoB;AAAxD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAEpB,UAA9B;AAA0C,QAAA,YAAY,EAAEoB;AAAxD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAEpB,UAA9B;AAA0C,QAAA,YAAY,EAAEoB;AAAxD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAEpB,UAA9B;AAA0C,QAAA,YAAY,EAAEoB;AAAxD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAEpB,UAA9B;AAA0C,QAAA,YAAY,EAAEoB;AAAxD;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAEpB,UAA9B;AAA0C,QAAA,YAAY,EAAEoB;AAAxD;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAgBD,CA3DD;;IAAMvB,mB;UACYN,S;;;KADZM,mB;AA4DN,eAAeA,mBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextFieldComponent from './TextFieldComponent';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '15ch',\n    },\n  },\n}));\n\nconst MultilineTextFields = (playerData) => {\n  const classes = useStyles();\n  const [currencies, setCurrencies] = React.useState([])\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [pokemonsInUse, setPokemonsInUse] = React.useState([]);\n\n \n\n  useEffect(() => {\n    const loadPokemons = async () => {\n\n      setIsLoading(true);\n\n      let currenciesData = []\n      await playerData.playerData.pokemons.forEach((pokemon) => {\n        if (pokemon.number !== 0) {\n          for (let index = 0; index < pokemon.number; index++) {\n\n            const isUsed = pokemonsInUse.find(isUsed => isUsed.name === pokemon.name)\n            console.log(isUsed)\n            if (!isUsed) {\n              currenciesData.push(pokemon)\n            }\n          }\n        }\n      })\n      setCurrencies(currenciesData)\n      setIsLoading(false);\n    }\n    loadPokemons();\n\n  });\n\n\n  const addNewPokemonInUse = (newPokemon) => {\n    console.log(newPokemon)\n    let pokesInUse = pokemonsInUse\n    pokesInUse.push(newPokemon)\n    setPokemonsInUse(pokesInUse)\n    console.log(pokesInUse)\n    useEffect()\n  }\n\n  return (\n\n    <form className={classes.root} noValidate autoComplete=\"off\">\n\n      {isLoading ? null :\n        <div>\n          <TextFieldComponent pokemons={currencies} onUsePokemon={addNewPokemonInUse} />\n          <TextFieldComponent pokemons={currencies} onUsePokemon={addNewPokemonInUse} />\n          <TextFieldComponent pokemons={currencies} onUsePokemon={addNewPokemonInUse} />\n          <TextFieldComponent pokemons={currencies} onUsePokemon={addNewPokemonInUse} />\n          <TextFieldComponent pokemons={currencies} onUsePokemon={addNewPokemonInUse} />\n          <TextFieldComponent pokemons={currencies} onUsePokemon={addNewPokemonInUse} />\n        </div>}\n\n    </form>\n  )\n}\nexport default MultilineTextFields;"]},"metadata":{},"sourceType":"module"}