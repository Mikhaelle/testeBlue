{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mikha/Documentos/test-blue/client/pokechange/src/components/MultilineTextFields.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextFieldComponent from './TextFieldComponent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '15ch'\n    }\n  }\n}));\n\nconst MultilineTextFields = props => {\n  _s();\n\n  const classes = useStyles();\n  const [pokemons, setPokemons] = React.useState([]);\n  const [pokemonsUsed, setPokemonsUsed] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  useEffect(() => {\n    console.log(props);\n    setIsLoading(true);\n    let pokemonData = [];\n    props.playerData.pokemons.forEach(pokemon => {\n      if (pokemon.number !== 0) {\n        for (let index = 0; index < pokemon.number; index++) {\n          pokemon.inUse = false;\n          pokemonData.push(pokemon);\n        }\n      }\n    });\n    setPokemons(pokemonData);\n    setIsLoading(false);\n  }, []);\n\n  const addNewPokemonInUse = usedPokemon => {\n    let pokemon = pokemons[usedPokemon];\n    pokemon.inUse = true;\n    setPokemonsUsed(prevPokemonsUsed => {\n      return prevPokemonsUsed.push(pokemon);\n    });\n    pokemons[usedPokemon] = pokemon;\n    setPokemons(prevPokemons => {\n      return prevPokemons.concat(pokemon);\n    });\n    props.playerPokemons(pokemonsUsed);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: isLoading ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: pokemons,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: pokemons,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: pokemons,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: pokemons,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: pokemons,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: pokemons,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MultilineTextFields, \"rYjzm2Sstrn6ofAS6xmjnceiuJw=\", false, function () {\n  return [useStyles];\n});\n\n_c = MultilineTextFields;\nexport default MultilineTextFields;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultilineTextFields\");","map":{"version":3,"sources":["/home/mikha/Documentos/test-blue/client/pokechange/src/components/MultilineTextFields.js"],"names":["React","useEffect","makeStyles","TextFieldComponent","useStyles","theme","root","margin","spacing","width","MultilineTextFields","props","classes","pokemons","setPokemons","useState","pokemonsUsed","setPokemonsUsed","isLoading","setIsLoading","console","log","pokemonData","playerData","forEach","pokemon","number","index","inUse","push","addNewPokemonInUse","usedPokemon","prevPokemonsUsed","prevPokemons","concat","playerPokemons"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextFieldComponent from './TextFieldComponent';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '15ch',\n    },\n  },\n}));\n\nconst MultilineTextFields = (props) => {\n  const classes = useStyles();\n  const [pokemons, setPokemons] = React.useState([])\n  const [pokemonsUsed, setPokemonsUsed] = React.useState([])\n  const [isLoading, setIsLoading] = React.useState(true);\n\n\n\n  useEffect(() => {\n    console.log(props)\n    setIsLoading(true);\n    let pokemonData = []\n    props.playerData.pokemons.forEach((pokemon) => {\n      if (pokemon.number !== 0) {\n        for (let index = 0; index < pokemon.number; index++) {\n          pokemon.inUse = false;\n          pokemonData.push(pokemon)\n        }\n      }\n    })\n    setPokemons(pokemonData)\n    setIsLoading(false)\n  }, []);\n\n\n\n\n  const addNewPokemonInUse = (usedPokemon) => {\n    let pokemon = pokemons[usedPokemon];\n    pokemon.inUse = true;\n    setPokemonsUsed((prevPokemonsUsed) => { return prevPokemonsUsed.push(pokemon) })\n    pokemons[usedPokemon] = pokemon\n    setPokemons((prevPokemons) => { return prevPokemons.concat(pokemon) })\n    props.playerPokemons(pokemonsUsed)\n  }\n\n\n  return (\n\n    <form className={classes.root} noValidate autoComplete=\"off\">\n\n      {isLoading ? null :\n        <div>\n          <TextFieldComponent pokemons={pokemons} onUsePokemon={addNewPokemonInUse} />\n          <TextFieldComponent pokemons={pokemons} onUsePokemon={addNewPokemonInUse} />\n          <TextFieldComponent pokemons={pokemons} onUsePokemon={addNewPokemonInUse} />\n          <TextFieldComponent pokemons={pokemons} onUsePokemon={addNewPokemonInUse} />\n          <TextFieldComponent pokemons={pokemons} onUsePokemon={addNewPokemonInUse} />\n          <TextFieldComponent pokemons={pokemons} onUsePokemon={addNewPokemonInUse} />\n        </div>}\n\n    </form>\n  )\n}\nexport default MultilineTextFields;"]},"metadata":{},"sourceType":"module"}