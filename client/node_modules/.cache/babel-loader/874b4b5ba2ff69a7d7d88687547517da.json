{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mikha/Documentos/test-blue/client/pokechange/src/components/MultilineTextFields.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextFieldComponent from './TextFieldComponent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '15ch'\n    }\n  }\n}));\n\nconst MultilineTextFields = playerData => {\n  _s();\n\n  const classes = useStyles();\n  const [pokemons, setPokemons] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  useEffect(() => {\n    setIsLoading(true);\n    let pokemonData = [];\n    playerData.playerData.pokemons.forEach(pokemon => {\n      if (pokemon.number !== 0) {\n        for (let index = 0; index < pokemon.number; index++) {\n          pokemon.inUse = false;\n          pokemonData.concat(pokemon);\n        }\n      }\n    });\n    setPokemons(pokemonData);\n    setIsLoading(false);\n  }, []);\n\n  const addNewPokemonInUse = usedPokemon => {\n    let pokemon = pokemons[usedPokemon];\n    pokemon.inUse = true;\n    pokemons[usedPokemon] = pokemon;\n    setPokemons(prevPokemons => {\n      return prevPokemons.concat(pokemon);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: isLoading ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: pokemons,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: pokemons,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: pokemons,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: pokemons,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: pokemons,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComponent, {\n        pokemons: pokemons,\n        onUsePokemon: addNewPokemonInUse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MultilineTextFields, \"2sNx8XVndQkB8yTiv8CIqBfuM2w=\", false, function () {\n  return [useStyles];\n});\n\n_c = MultilineTextFields;\nexport default MultilineTextFields;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultilineTextFields\");","map":{"version":3,"sources":["/home/mikha/Documentos/test-blue/client/pokechange/src/components/MultilineTextFields.js"],"names":["React","useEffect","makeStyles","TextFieldComponent","useStyles","theme","root","margin","spacing","width","MultilineTextFields","playerData","classes","pokemons","setPokemons","useState","isLoading","setIsLoading","pokemonData","forEach","pokemon","number","index","inUse","concat","addNewPokemonInUse","usedPokemon","prevPokemons"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextFieldComponent from './TextFieldComponent';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '15ch',\n    },\n  },\n}));\n\nconst MultilineTextFields = (playerData) => {\n  const classes = useStyles();\n  const [pokemons, setPokemons] = React.useState([])\n  const [isLoading, setIsLoading] = React.useState(true);\n\n\n\n  useEffect(() => {\n    setIsLoading(true);\n    let pokemonData = []\n    playerData.playerData.pokemons.forEach((pokemon) => {\n      if (pokemon.number !== 0) {\n        for (let index = 0; index < pokemon.number; index++) {\n          pokemon.inUse = false;\n          pokemonData.concat(pokemon)\n        }\n      }\n    })\n    setPokemons(pokemonData)\n    setIsLoading(false)\n  }, []);\n\n\n\n\n  const addNewPokemonInUse = (usedPokemon) => {\n    let pokemon = pokemons[usedPokemon];\n    pokemon.inUse = true;\n    pokemons[usedPokemon] = pokemon\n    setPokemons((prevPokemons) => { return prevPokemons.concat(pokemon) })\n  }\n\n\n  return (\n\n    <form className={classes.root} noValidate autoComplete=\"off\">\n\n      {isLoading ? null :\n        <div>\n          <TextFieldComponent pokemons={pokemons} onUsePokemon={addNewPokemonInUse} />\n          <TextFieldComponent pokemons={pokemons} onUsePokemon={addNewPokemonInUse} />\n          <TextFieldComponent pokemons={pokemons} onUsePokemon={addNewPokemonInUse} />\n          <TextFieldComponent pokemons={pokemons} onUsePokemon={addNewPokemonInUse} />\n          <TextFieldComponent pokemons={pokemons} onUsePokemon={addNewPokemonInUse} />\n          <TextFieldComponent pokemons={pokemons} onUsePokemon={addNewPokemonInUse} />\n        </div>}\n\n    </form>\n  )\n}\nexport default MultilineTextFields;"]},"metadata":{},"sourceType":"module"}