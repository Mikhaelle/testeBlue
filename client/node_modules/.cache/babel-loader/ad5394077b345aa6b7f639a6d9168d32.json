{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mikha/Documentos/test-blue/client/pokechange/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport MultilineTextFields from './components/MultilineTextFields';\nimport Button from '@material-ui/core/Button';\nimport React, { useEffect, useState } from 'react';\nimport ErrorModal from './components/errorModal';\nimport LoadingSpinner from './components/loadingSpinner';\n\nfunction App() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedPlayer, setLoadedPlayer] = useState([]);\n  const [selectPlayerPokemons1, setselectPlayerPokemons1] = useState([]);\n  const [selectPlayerPokemons2, setselectPlayerPokemons2] = useState([]);\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/player/');\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedPlayer(responseData.players);\n      } catch (err) {\n        setError(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, []);\n  useEffect(() => {\n    setselectPlayerPokemons1(selectPlayerPokemons1);\n    setselectPlayerPokemons2(selectPlayerPokemons2);\n  }, [selectPlayerPokemons1, selectPlayerPokemons2]);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  const updateSelectPlayerPokemon = pokemonsUsed => {\n    let actual = selectPlayerPokemons1;\n    actual.push(pokemonsUsed);\n    console.log(actual);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n          error: error,\n          onClear: errorHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center\",\n          children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), !isLoading && loadedPlayer && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [loadedPlayer.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Title\",\n            children: [player.name, /*#__PURE__*/_jsxDEV(MultilineTextFields, {\n              playerData: player,\n              playerPokemons: updateSelectPlayerPokemon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            children: \"Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qUBR2FWWK3VvfYmGj5JmMpp794U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mikha/Documentos/test-blue/client/pokechange/src/App.js"],"names":["MultilineTextFields","Button","React","useEffect","useState","ErrorModal","LoadingSpinner","App","isLoading","setIsLoading","error","setError","loadedPlayer","setLoadedPlayer","selectPlayerPokemons1","setselectPlayerPokemons1","selectPlayerPokemons2","setselectPlayerPokemons2","sendRequest","response","fetch","responseData","json","ok","Error","message","players","err","errorHandler","updateSelectPlayerPokemon","pokemonsUsed","actual","push","console","log","map","player","index","name"],"mappings":"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","sourcesContent":["import './App.css';\nimport MultilineTextFields from './components/MultilineTextFields'\nimport Button from '@material-ui/core/Button';\nimport React, { useEffect, useState } from 'react';\nimport ErrorModal from './components/errorModal';\nimport LoadingSpinner from './components/loadingSpinner';\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedPlayer, setLoadedPlayer] = useState([]);\n  const [selectPlayerPokemons1, setselectPlayerPokemons1] = useState([]);\n\n  const [selectPlayerPokemons2, setselectPlayerPokemons2] = useState([]);\n\n\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch('http://localhost:5000/api/player/');\n\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setLoadedPlayer(responseData.players);\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    };\n    sendRequest();\n  }, []);\n\n  useEffect(() => {\n    setselectPlayerPokemons1(selectPlayerPokemons1);\n    setselectPlayerPokemons2(selectPlayerPokemons2);\n  }, [selectPlayerPokemons1,selectPlayerPokemons2]);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  const updateSelectPlayerPokemon = (pokemonsUsed) => {\n    let actual = selectPlayerPokemons1\n    actual.push(pokemonsUsed)\n    console.log(actual)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <React.Fragment>\n          <ErrorModal error={error} onClear={errorHandler} />\n          {isLoading && (\n            <div className=\"center\">\n              <LoadingSpinner />\n            </div>\n          )}{!isLoading && loadedPlayer &&\n            <div>\n              {\n                loadedPlayer.map((player, index) => (\n                  <div className=\"Title\">{player.name}\n                    <MultilineTextFields playerData={player} playerPokemons={updateSelectPlayerPokemon} />\n                  </div>\n                ))\n              }\n              <Button variant=\"contained\">Change</Button>\n            </div>\n          }\n        </React.Fragment>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}