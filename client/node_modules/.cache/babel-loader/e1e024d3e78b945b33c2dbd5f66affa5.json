{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mikha/Documentos/test-blue/client/pokechange/src/components/textselect.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from './textfield';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '15ch'\n    }\n  }\n}));\nexport default function MultilineTextFields() {\n  _s();\n\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedPlayer, setLoadedPlayer] = useState();\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/player/');\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedPlayer(responseData.users);\n      } catch (err) {\n        setError(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, []);\n\n  const handleChange = event => {\n    setCurrency(event.target.value);\n  };\n\n  const updatePlayersData = () => {\n    setPlayerData(players());\n    console.log(playersData);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), !isLoading && loadedPlayer && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [updatePlayersData(), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [TextField(playersData[0].pokemons, handleChange), TextField(playersData[0].pokemons, handleChange), TextField(playersData[0].pokemons, handleChange), TextField(playersData[0].pokemons, handleChange), TextField(playersData[0].pokemons, handleChange), TextField(playersData[0].pokemons, handleChange)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultilineTextFields, \"1aRpNOexLzIBEyp49K9Bm3ngZ14=\", false, function () {\n  return [useStyles];\n});\n\n_c = MultilineTextFields;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultilineTextFields\");","map":{"version":3,"sources":["/home/mikha/Documentos/test-blue/client/pokechange/src/components/textselect.js"],"names":["React","makeStyles","TextField","ErrorModal","LoadingSpinner","useStyles","theme","root","margin","spacing","width","MultilineTextFields","classes","isLoading","setIsLoading","useState","error","setError","loadedPlayer","setLoadedPlayer","useEffect","sendRequest","response","fetch","responseData","json","ok","Error","message","users","err","handleChange","event","setCurrency","target","value","updatePlayersData","setPlayerData","players","console","log","playersData","errorHandler","pokemons"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from './textfield';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '15ch',\n    },\n  },\n}));\n\nexport default function MultilineTextFields() {\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedPlayer, setLoadedPlayer] = useState();\n\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch('http://localhost:5000/api/player/');\n\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedPlayer(responseData.users);\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    };\n    sendRequest();\n  }, []);\n\n\n\n  const handleChange = (event) => {\n    setCurrency(event.target.value);\n  };\n\n  const updatePlayersData = () => {\n    setPlayerData(players());\n    console.log(playersData);\n  };\n\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={errorHandler} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}{!isLoading && loadedPlayer &&\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          {updatePlayersData()}\n          <div>\n            {TextField(playersData[0].pokemons, handleChange)}\n            {TextField(playersData[0].pokemons, handleChange)}\n            {TextField(playersData[0].pokemons, handleChange)}\n            {TextField(playersData[0].pokemons, handleChange)}\n            {TextField(playersData[0].pokemons, handleChange)}\n            {TextField(playersData[0].pokemons, handleChange)}\n          </div>\n\n        </form>\n      }\n    </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}