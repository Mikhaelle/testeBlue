{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mikha/Documentos/test-blue/client/pokechange/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport MultilineTextFields from './components/MultilineTextFields';\nimport Button from '@material-ui/core/Button';\nimport React, { useEffect, useState } from 'react';\nimport ErrorModal from './components/errorModal';\nimport LoadingSpinner from './components/loadingSpinner';\nimport { Container } from '@material-ui/core';\n\nfunction App() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedPlayer, setLoadedPlayer] = useState([]);\n  const [selectPlayerPokemons1, setselectPlayerPokemons1] = useState([]);\n  const [selectPlayerPokemons2, setselectPlayerPokemons2] = useState([]);\n  const [baseExperience1, setbaseExperience1] = useState(0);\n  const [baseExperience2, setbaseExperience2] = useState(0);\n  useEffect(() => {\n    const sendRequest = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/player/');\n        const responseData = await response.json();\n        console.log(responseData);\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedPlayer(responseData.players);\n      } catch (err) {\n        setError(err.message);\n      }\n\n      setIsLoading(true);\n    };\n\n    sendRequest();\n    setselectPlayerPokemons1(selectPlayerPokemons1);\n    setselectPlayerPokemons2(selectPlayerPokemons2);\n  }, []);\n  useEffect(() => {\n    setbaseExperience1(baseExperience1);\n  }, [baseExperience1]);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  const updateSelectPlayerPokemon1 = pokemonsUsed => {\n    let actual = selectPlayerPokemons1;\n    actual.push(pokemonsUsed);\n    let baseExperience = 0;\n    let findedPokemon = loadedPlayer[0].pokemons.find(poke => poke.name === pokemonsUsed);\n    console.log(findedPokemon);\n\n    if (findedPokemon) {\n      console.log(\"entrou\");\n      baseExperience = findedPokemon.baseExperience;\n      setbaseExperience1(prevBase => {\n        return baseExperience = prevBase + baseExperience;\n      });\n      console.log(baseExperience1);\n    }\n  };\n\n  const updateSelectPlayerPokemon2 = pokemonsUsed => {\n    let actual = selectPlayerPokemons2;\n    actual.push(pokemonsUsed);\n    setselectPlayerPokemons2(actual);\n    let baseExperience = 0;\n    let findedPokemon = loadedPlayer[1].pokemons.find(poke => poke.name === pokemonsUsed);\n    console.log(findedPokemon);\n\n    if (findedPokemon) {\n      baseExperience = findedPokemon.baseExperience;\n      setbaseExperience2(prevBase => {\n        return baseExperience = prevBase + baseExperience;\n      });\n      console.log(baseExperience1);\n    }\n  };\n\n  const makeChange = () => {\n    if (Math.abs(baseExperience1 - baseExperience2) <= 30) {\n      window.location.reload(false);\n      console.log(\"trocaRealizada\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n          error: error,\n          onClear: errorHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"welcomeTitle\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Bem Vindo ao PokeChange! Selecione o seu pokemon.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center\",\n          children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), !isLoading ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [console.log(loadedPlayer), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Title\",\n            children: [loadedPlayer[0].name, /*#__PURE__*/_jsxDEV(MultilineTextFields, {\n              playerData: loadedPlayer[0],\n              playerPokemons: updateSelectPlayerPokemon1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: [\" baseExperience: \", baseExperience1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: makeChange,\n            children: \"Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Title\",\n            children: [loadedPlayer[1].name, /*#__PURE__*/_jsxDEV(MultilineTextFields, {\n              playerData: loadedPlayer[1],\n              playerPokemons: updateSelectPlayerPokemon2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: [\" baseExperience: \", baseExperience2]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TaJ6EyabsKzv1Fk3ghK6LKOdlkU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mikha/Documentos/test-blue/client/pokechange/src/App.js"],"names":["MultilineTextFields","Button","React","useEffect","useState","ErrorModal","LoadingSpinner","Container","App","isLoading","setIsLoading","error","setError","loadedPlayer","setLoadedPlayer","selectPlayerPokemons1","setselectPlayerPokemons1","selectPlayerPokemons2","setselectPlayerPokemons2","baseExperience1","setbaseExperience1","baseExperience2","setbaseExperience2","sendRequest","response","fetch","responseData","json","console","log","ok","Error","message","players","err","errorHandler","updateSelectPlayerPokemon1","pokemonsUsed","actual","push","baseExperience","findedPokemon","pokemons","find","poke","name","prevBase","updateSelectPlayerPokemon2","makeChange","Math","abs","window","location","reload"],"mappings":"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","sourcesContent":["import './App.css';\nimport MultilineTextFields from './components/MultilineTextFields'\nimport Button from '@material-ui/core/Button';\nimport React, { useEffect, useState } from 'react';\nimport ErrorModal from './components/errorModal';\nimport LoadingSpinner from './components/loadingSpinner';\nimport { Container } from '@material-ui/core';\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedPlayer, setLoadedPlayer] = useState([]);\n  const [selectPlayerPokemons1, setselectPlayerPokemons1] = useState([]);\n  const [selectPlayerPokemons2, setselectPlayerPokemons2] = useState([]);\n  const [baseExperience1, setbaseExperience1] = useState(0);\n  const [baseExperience2, setbaseExperience2] = useState(0);\n\n\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/player/');\n        const responseData = await response.json();\n        console.log(responseData)\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setLoadedPlayer(responseData.players);\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(true);\n    };\n    sendRequest();\n    setselectPlayerPokemons1(selectPlayerPokemons1);\n    setselectPlayerPokemons2(selectPlayerPokemons2);\n  }, []);\n\n\n  useEffect(() => {\n    setbaseExperience1(baseExperience1)\n  }, [baseExperience1])\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n\n  const updateSelectPlayerPokemon1 = (pokemonsUsed) => {\n    let actual = selectPlayerPokemons1\n    actual.push(pokemonsUsed)\n\n    let baseExperience = 0\n    let findedPokemon = loadedPlayer[0].pokemons.find(poke => poke.name === pokemonsUsed)\n    console.log(findedPokemon)\n    if (findedPokemon) {\n      console.log(\"entrou\")\n      baseExperience = findedPokemon.baseExperience\n      setbaseExperience1((prevBase) => { return baseExperience = prevBase + baseExperience })\n      console.log(baseExperience1)\n    }\n\n  }\n  const updateSelectPlayerPokemon2 = (pokemonsUsed) => {\n    let actual = selectPlayerPokemons2\n    actual.push(pokemonsUsed)\n    setselectPlayerPokemons2(actual)\n    let baseExperience = 0\n    let findedPokemon = loadedPlayer[1].pokemons.find(poke => poke.name === pokemonsUsed)\n    console.log(findedPokemon)\n    if (findedPokemon) {\n      baseExperience = findedPokemon.baseExperience\n      setbaseExperience2((prevBase) => { return baseExperience = prevBase + baseExperience })\n      console.log(baseExperience1)\n    }\n  }\n\n  const makeChange = () => {\n    if (Math.abs(baseExperience1 - baseExperience2) <= 30) {\n      window.location.reload(false);\n      console.log(\"trocaRealizada\")\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <React.Fragment>\n          <ErrorModal error={error} onClear={errorHandler} />\n          <Container className=\"welcomeTitle\">\n            <div>Bem Vindo ao PokeChange! Selecione o seu pokemon.</div>\n          </Container>\n\n          {!isLoading && (\n            <div className=\"center\">\n              <LoadingSpinner />\n            </div>\n          )}{!isLoading ? null :\n            <div>\n              {console.log(loadedPlayer)}\n              <div className=\"Title\">{loadedPlayer[0].name}\n                <MultilineTextFields playerData={loadedPlayer[0]} playerPokemons={updateSelectPlayerPokemon1} />\n              </div>\n              <div>\n                <a> baseExperience: {baseExperience1}</a>\n              </div>\n              <Button variant=\"contained\" onClick={makeChange}>Change</Button>\n\n              <div className=\"Title\">{loadedPlayer[1].name}\n                <MultilineTextFields playerData={loadedPlayer[1]} playerPokemons={updateSelectPlayerPokemon2} />\n              </div>\n              <div>\n                <a> baseExperience: {baseExperience2}</a>\n              </div>\n            </div>\n          }\n        </React.Fragment>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}