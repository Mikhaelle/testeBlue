{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mikha/Documentos/test-blue/client/pokechange/src/components/textselect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from './textfield';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '15ch'\n    }\n  }\n}));\nexport default function MultilineTextFields(playerData) {\n  _s();\n\n  const classes = useStyles();\n  const [currencies, setCurrencies] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [pokemonsInUse, setPokemonsInUse] = React.useState([]);\n  useEffect(() => {\n    setIsLoading(true);\n    let currenciesData = [];\n    playerData.playerData.pokemons.forEach(pokemon => {\n      console.log(pokemon);\n\n      if (pokemon.number !== 0) {\n        for (let index = 0; index < pokemon.number; index++) {\n          const isUsed = pokemonsInUse.find(isUsed => isUsed.name === pokemon.name);\n          console.log(isUsed);\n\n          if (!isUsed) {\n            currenciesData.push(pokemon);\n          }\n        }\n      }\n    });\n    setCurrencies(currenciesData);\n    setIsLoading(false);\n  }, [playerData, pokemonsInUse]);\n\n  const addNewPokemonInUse = newPokemon => {\n    setPokemonsInUse.push(newPokemon);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [console.log(currencies), isLoading && currencies ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        pokemons: currencies,\n        onUsePokemon: addNewPokemonInUse()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultilineTextFields, \"vW0tolPKryhAr0kS75S1ac+QuXM=\", false, function () {\n  return [useStyles];\n});\n\n_c = MultilineTextFields;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultilineTextFields\");","map":{"version":3,"sources":["/home/mikha/Documentos/test-blue/client/pokechange/src/components/textselect.js"],"names":["React","useEffect","makeStyles","TextField","useStyles","theme","root","margin","spacing","width","MultilineTextFields","playerData","classes","currencies","setCurrencies","useState","isLoading","setIsLoading","pokemonsInUse","setPokemonsInUse","currenciesData","pokemons","forEach","pokemon","console","log","number","index","isUsed","find","name","push","addNewPokemonInUse","newPokemon"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from './textfield';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '15ch',\n    },\n  },\n}));\n\nexport default function MultilineTextFields(playerData) {\n  const classes = useStyles();\n  const [currencies, setCurrencies] = React.useState([])\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [pokemonsInUse, setPokemonsInUse] = React.useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    let currenciesData = []\n    playerData.playerData.pokemons.forEach((pokemon) => {\n      console.log(pokemon)\n      if (pokemon.number !== 0) {\n        for (let index = 0; index < pokemon.number; index++) {\n         \n          const isUsed = pokemonsInUse.find(isUsed => isUsed.name === pokemon.name)\n          console.log(isUsed)\n          if (!isUsed) {\n            currenciesData.push(pokemon)\n          }\n        }\n      }\n    })\n    setCurrencies(currenciesData)\n    setIsLoading(false);\n  }, [playerData,pokemonsInUse ]);\n\n  const addNewPokemonInUse = newPokemon =>{\n    setPokemonsInUse.push(newPokemon)\n  }\n\n  return (\n\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      {console.log(currencies)}\n      {isLoading && currencies ? null :\n        <div>\n          <TextField pokemons={currencies} onUsePokemon={addNewPokemonInUse()} />\n          <TextField pokemons={currencies} onUsePokemon={addNewPokemonInUse()} />\n          <TextField pokemons={currencies} onUsePokemon={addNewPokemonInUse()} />\n          <TextField pokemons={currencies} onUsePokemon={addNewPokemonInUse()} />\n          <TextField pokemons={currencies} onUsePokemon={addNewPokemonInUse()} />\n          <TextField pokemons={currencies} onUsePokemon={addNewPokemonInUse()} />\n        </div>}\n\n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}