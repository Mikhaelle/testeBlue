{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mikha/Documentos/test-blue/client/pokechange/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport MultilineTextFields from './components/MultilineTextFields';\nimport Button from '@material-ui/core/Button';\nimport React, { useEffect, useState } from 'react';\nimport ErrorModal from './components/errorModal';\nimport LoadingSpinner from './components/loadingSpinner';\nimport { Container } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\n\nfunction App() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedPlayer, setLoadedPlayer] = useState([]);\n  const [selectPlayerPokemons1, setselectPlayerPokemons1] = useState([]);\n  const [selectPlayerPokemons2, setselectPlayerPokemons2] = useState([]);\n  const [baseExperience1, setbaseExperience1] = useState(0);\n  const [baseExperience2, setbaseExperience2] = useState(0);\n  useEffect(() => {\n    const sendRequest = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/player/');\n        const responseData = await response.json();\n        console.log(responseData);\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedPlayer(responseData.players);\n      } catch (err) {\n        setError(err.message);\n      }\n\n      setIsLoading(true);\n    };\n\n    sendRequest();\n    setselectPlayerPokemons1(selectPlayerPokemons1);\n    setselectPlayerPokemons2(selectPlayerPokemons2);\n  }, []);\n  useEffect(() => {\n    setbaseExperience1(baseExperience1);\n  }, [baseExperience1]);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  const updateSelectPlayerPokemon1 = pokemonsUsed => {\n    let actual = selectPlayerPokemons1;\n    actual.push(pokemonsUsed);\n    let baseExperience = 0;\n    let findedPokemon = loadedPlayer[0].pokemons.find(poke => poke.name === pokemonsUsed);\n    console.log(findedPokemon);\n\n    if (findedPokemon) {\n      console.log(\"entrou\");\n      baseExperience = findedPokemon.baseExperience;\n      setbaseExperience1(prevBase => {\n        return baseExperience = prevBase + baseExperience;\n      });\n      console.log(baseExperience1);\n    }\n  };\n\n  const updateSelectPlayerPokemon2 = pokemonsUsed => {\n    let actual = selectPlayerPokemons2;\n    actual.push(pokemonsUsed);\n    setselectPlayerPokemons2(actual);\n    let baseExperience = 0;\n    let findedPokemon = loadedPlayer[1].pokemons.find(poke => poke.name === pokemonsUsed);\n    console.log(findedPokemon);\n\n    if (findedPokemon) {\n      baseExperience = findedPokemon.baseExperience;\n      setbaseExperience2(prevBase => {\n        return baseExperience = prevBase + baseExperience;\n      });\n      console.log(baseExperience1);\n    }\n  };\n\n  const makeChange = () => {\n    if (Math.abs(baseExperience1 - baseExperience2) <= 30) {\n      const player1Id = loadedPlayer[0].id;\n      const player2Id = loadedPlayer[1].id;\n      addPokemonToPlayer(player1Id, player2Id);\n      subPokemonToPlayer(player1Id, player2Id);\n      console.log(\"trocaRealizada\");\n    }\n  };\n\n  const addPokemonToPlayer = (player1Id, player2Id) => {\n    selectPlayerPokemons1.forEach(async pokemon => {\n      if (pokemon !== \"\") {\n        await requestAddPokemonToPlayer(player2Id, pokemon);\n      }\n    });\n    selectPlayerPokemons2.forEach(async pokemon => {\n      if (pokemon !== \"\") {\n        await requestAddPokemonToPlayer(player1Id, pokemon);\n      }\n    });\n  };\n\n  const subPokemonToPlayer = (player1Id, player2Id) => {\n    selectPlayerPokemons1.forEach(async pokemon => {\n      if (pokemon !== \"\") {\n        await requestSubPokemonToPlayer(player1Id, pokemon);\n      }\n    });\n    selectPlayerPokemons2.forEach(async pokemon => {\n      if (pokemon !== \"\") {\n        await requestSubPokemonToPlayer(player2Id, pokemon);\n      }\n    });\n  };\n\n  const requestAddPokemonToPlayer = async (playerId, pokemonName) => {\n    try {\n      const requestBody = JSON.stringify({\n        playerId,\n        pokemonName\n      });\n      console.log(requestBody);\n      const response = await fetch('http://localhost:5000/api/player/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: requestBody\n      });\n      const responseData = await response.json();\n      console.log(responseData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const requestSubPokemonToPlayer = async (playerId, pokemonName) => {\n    try {\n      const requestBody = JSON.stringify({\n        playerId,\n        pokemonName\n      });\n      console.log(requestBody);\n      const response = await fetch('http://localhost:5000/api/player/sub', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: requestBody\n      });\n      const responseData = await response.json();\n      console.log(responseData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n          error: error,\n          onClear: errorHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"welcomeHeader\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"welcomeTitle\",\n            children: \"Bem Vindo ao PokeChange! Selecione o seu pokemon.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center\",\n          children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), !isLoading ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [console.log(loadedPlayer), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Title\",\n              children: [loadedPlayer[0].name, /*#__PURE__*/_jsxDEV(MultilineTextFields, {\n                playerData: loadedPlayer[0],\n                playerPokemons: updateSelectPlayerPokemon1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"baseExperience\",\n              children: [\"baseExperience: \", baseExperience1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: makeChange,\n              children: \"Realizar Troca\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Title\",\n              children: [loadedPlayer[1].name, /*#__PURE__*/_jsxDEV(MultilineTextFields, {\n                playerData: loadedPlayer[1],\n                playerPokemons: updateSelectPlayerPokemon2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"baseExperience\",\n              children: [\"baseExperience: \", baseExperience2]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TaJ6EyabsKzv1Fk3ghK6LKOdlkU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mikha/Documentos/test-blue/client/pokechange/src/App.js"],"names":["MultilineTextFields","Button","React","useEffect","useState","ErrorModal","LoadingSpinner","Container","Paper","App","isLoading","setIsLoading","error","setError","loadedPlayer","setLoadedPlayer","selectPlayerPokemons1","setselectPlayerPokemons1","selectPlayerPokemons2","setselectPlayerPokemons2","baseExperience1","setbaseExperience1","baseExperience2","setbaseExperience2","sendRequest","response","fetch","responseData","json","console","log","ok","Error","message","players","err","errorHandler","updateSelectPlayerPokemon1","pokemonsUsed","actual","push","baseExperience","findedPokemon","pokemons","find","poke","name","prevBase","updateSelectPlayerPokemon2","makeChange","Math","abs","player1Id","id","player2Id","addPokemonToPlayer","subPokemonToPlayer","forEach","pokemon","requestAddPokemonToPlayer","requestSubPokemonToPlayer","playerId","pokemonName","requestBody","JSON","stringify","method","headers","body"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,OAAOA,mBAAP,MAAgC,kCAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,qBAAD,EAAwBC,wBAAxB,IAAoDb,QAAQ,CAAC,EAAD,CAAlE;AACA,QAAM,CAACc,qBAAD,EAAwBC,wBAAxB,IAAoDf,QAAQ,CAAC,EAAD,CAAlE;AACA,QAAM,CAACgB,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAACkB,eAAD,EAAkBC,kBAAlB,IAAwCnB,QAAQ,CAAC,CAAD,CAAtD;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAA5B;AACA,cAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;;AACA,YAAI,CAACF,QAAQ,CAACM,EAAd,EAAkB;AAChB,gBAAM,IAAIC,KAAJ,CAAUL,YAAY,CAACM,OAAvB,CAAN;AACD;;AACDlB,QAAAA,eAAe,CAACY,YAAY,CAACO,OAAd,CAAf;AACD,OARD,CAQE,OAAOC,GAAP,EAAY;AACZtB,QAAAA,QAAQ,CAACsB,GAAG,CAACF,OAAL,CAAR;AACD;;AACDtB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAbD;;AAcAa,IAAAA,WAAW;AACXP,IAAAA,wBAAwB,CAACD,qBAAD,CAAxB;AACAG,IAAAA,wBAAwB,CAACD,qBAAD,CAAxB;AACD,GAlBQ,EAkBN,EAlBM,CAAT;AAqBAf,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,kBAAkB,CAACD,eAAD,CAAlB;AACD,GAFQ,EAEN,CAACA,eAAD,CAFM,CAAT;;AAIA,QAAMgB,YAAY,GAAG,MAAM;AACzBvB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAKA,QAAMwB,0BAA0B,GAAIC,YAAD,IAAkB;AACnD,QAAIC,MAAM,GAAGvB,qBAAb;AACAuB,IAAAA,MAAM,CAACC,IAAP,CAAYF,YAAZ;AAEA,QAAIG,cAAc,GAAG,CAArB;AACA,QAAIC,aAAa,GAAG5B,YAAY,CAAC,CAAD,CAAZ,CAAgB6B,QAAhB,CAAyBC,IAAzB,CAA8BC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcR,YAApD,CAApB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYY,aAAZ;;AACA,QAAIA,aAAJ,EAAmB;AACjBb,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAW,MAAAA,cAAc,GAAGC,aAAa,CAACD,cAA/B;AACApB,MAAAA,kBAAkB,CAAE0B,QAAD,IAAc;AAAE,eAAON,cAAc,GAAGM,QAAQ,GAAGN,cAAnC;AAAmD,OAApE,CAAlB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYV,eAAZ;AACD;AAEF,GAdD;;AAeA,QAAM4B,0BAA0B,GAAIV,YAAD,IAAkB;AACnD,QAAIC,MAAM,GAAGrB,qBAAb;AACAqB,IAAAA,MAAM,CAACC,IAAP,CAAYF,YAAZ;AACAnB,IAAAA,wBAAwB,CAACoB,MAAD,CAAxB;AACA,QAAIE,cAAc,GAAG,CAArB;AACA,QAAIC,aAAa,GAAG5B,YAAY,CAAC,CAAD,CAAZ,CAAgB6B,QAAhB,CAAyBC,IAAzB,CAA8BC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcR,YAApD,CAApB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYY,aAAZ;;AACA,QAAIA,aAAJ,EAAmB;AACjBD,MAAAA,cAAc,GAAGC,aAAa,CAACD,cAA/B;AACAlB,MAAAA,kBAAkB,CAAEwB,QAAD,IAAc;AAAE,eAAON,cAAc,GAAGM,QAAQ,GAAGN,cAAnC;AAAmD,OAApE,CAAlB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYV,eAAZ;AACD;AACF,GAZD;;AAcA,QAAM6B,UAAU,GAAG,MAAM;AACvB,QAAIC,IAAI,CAACC,GAAL,CAAS/B,eAAe,GAAGE,eAA3B,KAA+C,EAAnD,EAAuD;AACrD,YAAM8B,SAAS,GAAGtC,YAAY,CAAC,CAAD,CAAZ,CAAgBuC,EAAlC;AACA,YAAMC,SAAS,GAAGxC,YAAY,CAAC,CAAD,CAAZ,CAAgBuC,EAAlC;AAEAE,MAAAA,kBAAkB,CAACH,SAAD,EAAYE,SAAZ,CAAlB;AACAE,MAAAA,kBAAkB,CAACJ,SAAD,EAAYE,SAAZ,CAAlB;AAGAzB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF,GAXD;;AAaA,QAAMyB,kBAAkB,GAAG,CAACH,SAAD,EAAYE,SAAZ,KAA0B;AACnDtC,IAAAA,qBAAqB,CAACyC,OAAtB,CAA8B,MAAOC,OAAP,IAAmB;AAC/C,UAAIA,OAAO,KAAK,EAAhB,EAAoB;AAClB,cAAMC,yBAAyB,CAACL,SAAD,EAAYI,OAAZ,CAA/B;AAED;AACF,KALD;AAMAxC,IAAAA,qBAAqB,CAACuC,OAAtB,CAA8B,MAAOC,OAAP,IAAmB;AAC/C,UAAIA,OAAO,KAAK,EAAhB,EAAoB;AAClB,cAAMC,yBAAyB,CAACP,SAAD,EAAYM,OAAZ,CAA/B;AACD;AACF,KAJD;AAMD,GAbD;;AAeA,QAAMF,kBAAkB,GAAG,CAACJ,SAAD,EAAYE,SAAZ,KAA0B;AACnDtC,IAAAA,qBAAqB,CAACyC,OAAtB,CAA8B,MAAOC,OAAP,IAAmB;AAC/C,UAAIA,OAAO,KAAK,EAAhB,EAAoB;AAClB,cAAME,yBAAyB,CAACR,SAAD,EAAYM,OAAZ,CAA/B;AACD;AACF,KAJD;AAKAxC,IAAAA,qBAAqB,CAACuC,OAAtB,CAA8B,MAAOC,OAAP,IAAmB;AAC/C,UAAIA,OAAO,KAAK,EAAhB,EAAoB;AAClB,cAAME,yBAAyB,CAACN,SAAD,EAAYI,OAAZ,CAA/B;AACD;AACF,KAJD;AAMD,GAZD;;AAcA,QAAMC,yBAAyB,GAAG,OAAOE,QAAP,EAAiBC,WAAjB,KAAiC;AAEjE,QAAI;AACF,YAAMC,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAe;AACjCJ,QAAAA,QADiC;AAEjCC,QAAAA;AAFiC,OAAf,CAApB;AAIAjC,MAAAA,OAAO,CAACC,GAAR,CAAYiC,WAAZ;AACA,YAAMtC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,EAAyC;AACnEwC,QAAAA,MAAM,EAAE,MAD2D;AAEnEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF0D;AAKnEC,QAAAA,IAAI,EAAEL;AAL6D,OAAzC,CAA5B;AAOA,YAAMpC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACD,KAfD,CAeE,OAAOf,KAAP,EAAc;AACdiB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACD;AACF,GApBD;;AAsBA,QAAMgD,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,WAAjB,KAAiC;AAEjE,QAAI;AACF,YAAMC,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAe;AACjCJ,QAAAA,QADiC;AAEjCC,QAAAA;AAFiC,OAAf,CAApB;AAIAjC,MAAAA,OAAO,CAACC,GAAR,CAAYiC,WAAZ;AACA,YAAMtC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,EAAyC;AACnEwC,QAAAA,MAAM,EAAE,MAD2D;AAEnEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF0D;AAKnEC,QAAAA,IAAI,EAAEL;AAL6D,OAAzC,CAA5B;AAOA,YAAMpC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACD,KAfD,CAeE,OAAOf,KAAP,EAAc;AACdiB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACD;AACF,GApBD;;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEA,KAAnB;AAA0B,UAAA,OAAO,EAAEwB;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,eAArB;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,EAMG,CAAC1B,SAAD,iBACC;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAUK,CAACA,SAAD,GAAa,IAAb,gBACD;AAAA,qBACGmB,OAAO,CAACC,GAAR,CAAYhB,YAAZ,CADH,eAEE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAE,CAAlB;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,yBAAwBA,YAAY,CAAC,CAAD,CAAZ,CAAgBgC,IAAxC,eACE,QAAC,mBAAD;AAAqB,gBAAA,UAAU,EAAEhC,YAAY,CAAC,CAAD,CAA7C;AAAkD,gBAAA,cAAc,EAAEuB;AAAlE;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,6CACmBjB,eADnB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAUE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,OAAO,EAAE6B,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF,eAaE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAE,CAAlB;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,yBAAwBnC,YAAY,CAAC,CAAD,CAAZ,CAAgBgC,IAAxC,eACE,QAAC,mBAAD;AAAqB,gBAAA,UAAU,EAAEhC,YAAY,CAAC,CAAD,CAA7C;AAAkD,gBAAA,cAAc,EAAEkC;AAAlE;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,6CACmB1B,eADnB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GArMQb,G;;KAAAA,G;AAuMT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport MultilineTextFields from './components/MultilineTextFields'\nimport Button from '@material-ui/core/Button';\nimport React, { useEffect, useState } from 'react';\nimport ErrorModal from './components/errorModal';\nimport LoadingSpinner from './components/loadingSpinner';\nimport { Container } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedPlayer, setLoadedPlayer] = useState([]);\n  const [selectPlayerPokemons1, setselectPlayerPokemons1] = useState([]);\n  const [selectPlayerPokemons2, setselectPlayerPokemons2] = useState([]);\n  const [baseExperience1, setbaseExperience1] = useState(0);\n  const [baseExperience2, setbaseExperience2] = useState(0);\n\n\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/player/');\n        const responseData = await response.json();\n        console.log(responseData)\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setLoadedPlayer(responseData.players);\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(true);\n    };\n    sendRequest();\n    setselectPlayerPokemons1(selectPlayerPokemons1);\n    setselectPlayerPokemons2(selectPlayerPokemons2);\n  }, []);\n\n\n  useEffect(() => {\n    setbaseExperience1(baseExperience1)\n  }, [baseExperience1])\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n\n  const updateSelectPlayerPokemon1 = (pokemonsUsed) => {\n    let actual = selectPlayerPokemons1\n    actual.push(pokemonsUsed)\n\n    let baseExperience = 0\n    let findedPokemon = loadedPlayer[0].pokemons.find(poke => poke.name === pokemonsUsed)\n    console.log(findedPokemon)\n    if (findedPokemon) {\n      console.log(\"entrou\")\n      baseExperience = findedPokemon.baseExperience\n      setbaseExperience1((prevBase) => { return baseExperience = prevBase + baseExperience })\n      console.log(baseExperience1)\n    }\n\n  }\n  const updateSelectPlayerPokemon2 = (pokemonsUsed) => {\n    let actual = selectPlayerPokemons2\n    actual.push(pokemonsUsed)\n    setselectPlayerPokemons2(actual)\n    let baseExperience = 0\n    let findedPokemon = loadedPlayer[1].pokemons.find(poke => poke.name === pokemonsUsed)\n    console.log(findedPokemon)\n    if (findedPokemon) {\n      baseExperience = findedPokemon.baseExperience\n      setbaseExperience2((prevBase) => { return baseExperience = prevBase + baseExperience })\n      console.log(baseExperience1)\n    }\n  }\n\n  const makeChange = () => {\n    if (Math.abs(baseExperience1 - baseExperience2) <= 30) {\n      const player1Id = loadedPlayer[0].id\n      const player2Id = loadedPlayer[1].id\n\n      addPokemonToPlayer(player1Id, player2Id)\n      subPokemonToPlayer(player1Id, player2Id)\n\n\n      console.log(\"trocaRealizada\")\n    }\n  }\n\n  const addPokemonToPlayer = (player1Id, player2Id) => {\n    selectPlayerPokemons1.forEach(async (pokemon) => {\n      if (pokemon !== \"\") {\n        await requestAddPokemonToPlayer(player2Id, pokemon)\n\n      }\n    })\n    selectPlayerPokemons2.forEach(async (pokemon) => {\n      if (pokemon !== \"\") {\n        await requestAddPokemonToPlayer(player1Id, pokemon)\n      }\n    })\n\n  }\n\n  const subPokemonToPlayer = (player1Id, player2Id) => {\n    selectPlayerPokemons1.forEach(async (pokemon) => {\n      if (pokemon !== \"\") {\n        await requestSubPokemonToPlayer(player1Id, pokemon)\n      }\n    })\n    selectPlayerPokemons2.forEach(async (pokemon) => {\n      if (pokemon !== \"\") {\n        await requestSubPokemonToPlayer(player2Id, pokemon)\n      }\n    })\n\n  }\n\n  const requestAddPokemonToPlayer = async (playerId, pokemonName) => {\n\n    try {\n      const requestBody = JSON.stringify({\n        playerId,\n        pokemonName\n      })\n      console.log(requestBody)\n      const response = await fetch('http://localhost:5000/api/player/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: requestBody\n      })\n      const responseData = await response.json()\n      console.log(responseData)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const requestSubPokemonToPlayer = async (playerId, pokemonName) => {\n\n    try {\n      const requestBody = JSON.stringify({\n        playerId,\n        pokemonName\n      })\n      console.log(requestBody)\n      const response = await fetch('http://localhost:5000/api/player/sub', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: requestBody\n      })\n      const responseData = await response.json()\n      console.log(responseData)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <React.Fragment>\n          <ErrorModal error={error} onClear={errorHandler} />\n          <Container className=\"welcomeHeader\">\n            <div className=\"welcomeTitle\">Bem Vindo ao PokeChange! Selecione o seu pokemon.</div>\n          </Container>\n\n          {!isLoading && (\n            <div className=\"center\">\n              <LoadingSpinner />\n            </div>\n          )}{!isLoading ? null :\n            <div>\n              {console.log(loadedPlayer)}\n              <Paper elevation={3} >\n                <div className=\"Title\">{loadedPlayer[0].name}\n                  <MultilineTextFields playerData={loadedPlayer[0]} playerPokemons={updateSelectPlayerPokemon1} />\n                </div>\n                <div className=\"baseExperience\">\n                  baseExperience: {baseExperience1}\n                </div>\n              </Paper>\n              <div className=\"button\" >\n                <Button variant=\"contained\" onClick={makeChange}>Realizar Troca</Button>\n              </div>\n              <Paper elevation={3} >\n                <div className=\"Title\">{loadedPlayer[1].name}\n                  <MultilineTextFields playerData={loadedPlayer[1]} playerPokemons={updateSelectPlayerPokemon2} />\n                </div>\n                <div className=\"baseExperience\">\n                  baseExperience: {baseExperience2}\n                </div>\n              </Paper>\n            </div>\n          }\n        </React.Fragment>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}